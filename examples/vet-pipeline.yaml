apiVersion: dataflow.argoproj.io/v1alpha1
kind: Pipeline
metadata:
  annotations:
    dataflow.argoproj.io/description: |
      This pipeline processes pets (cats and dogs).
    dataflow.argoproj.io/name: Vetinary
  name: vet
spec:
  steps:
  - container:
      args:
      - sh
      - -c
      - |
        cat /in/text | tee -a /var/run/argo-dataflow/out
      image: debian:10.7-slim
      out:
        fifo: true
      volumeMounts:
      - mountPath: /in
        name: in
      volumes:
      - configMap:
          name: pets
        name: in
    name: read-pets
    sinks:
    - stan:
        subject: animals
  - container:
      args:
      - sh
      - -c
      - |
        cat /var/run/argo-dataflow/in | grep cat | tee -a /var/run/argo-dataflow/out
      image: debian:10.7-slim
      in:
        fifo: true
      out:
        fifo: true
    name: filter-cats
    sinks:
    - stan:
        subject: cats
    sources:
    - stan:
        subject: animals
  - container:
      args:
      - sh
      - -c
      - |
        cat /var/run/argo-dataflow/in | tee -a /var/run/argo-dataflow/out
      image: debian:10.7-slim
      in:
        fifo: true
      out:
        fifo: true
    name: process-cats
    sinks:
    - kafka:
        topic: output-topic
    sources:
    - stan:
        subject: cats
  - container:
      args:
      - sh
      - -c
      - |
        cat /var/run/argo-dataflow/in | grep dog > /var/run/argo-dataflow/out
      image: debian:10.7-slim
      in:
        fifo: true
      out:
        fifo: true
    name: filter-dogs
    sinks:
    - stan:
        subject: dogs
    sources:
    - stan:
        subject: animals
  - container:
      args:
      - sh
      - -c
      - |
        cat /var/run/argo-dataflow/in | tee -a /var/run/argo-dataflow/out
      image: debian:10.7-slim
      in:
        fifo: true
      out:
        fifo: true
    name: process-dogs
    sinks:
    - kafka:
        topic: output-topic
    sources:
    - stan:
        subject: dogs

---
apiVersion: v1
data:
  text: |
    {"type": "dog", "name": "Emma"}
    {"type": "cat", "name": "Dino"}
    EOF
kind: ConfigMap
metadata:
  name: pets
