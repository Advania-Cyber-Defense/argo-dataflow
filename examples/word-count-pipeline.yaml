apiVersion: dataflow.argoproj.io/v1alpha1
kind: Pipeline
metadata:
  annotations:
    dataflow.argoproj.io/description: |
      This pipeline count the number of words in a document, not the number of count of each word as you might expect.

      For that we need `GroupByKey`.

      It also shows an example of a pipelines where nodes run to completion.
    dataflow.argoproj.io/name: Word Count
  creationTimestamp: null
  name: word-count
spec:
  nodes:
  - args:
    - sh
    - -c
    - |
      cat /in/text | tee /var/run/argo-dataflow/out
      sleep 999
    image: debian:10.7-slim
    imagePullPolicy: IfNotPresent
    name: read-text
    out:
      fifo: true
    resources: {}
    sinks:
    - nats:
        subject: a-b
    volumeMounts:
    - mountPath: /in
      name: in
    volumes:
    - configMap:
        name: word-count-input
      name: in
  - args:
    - sh
    - -c
    - |
      cat /var/run/argo-dataflow/in | while read sentence; do
        for word in $sentence; do
            echo $word
        done
      done > /var/run/argo-dataflow/out
    image: debian:10.7-slim
    imagePullPolicy: IfNotPresent
    in:
      fifo: true
    name: split-lines
    out:
      fifo: true
    replicas:
      value: 3
    resources: {}
    sinks:
    - nats:
        subject: b-c
    sources:
    - nats:
        subject: a-b
  - args:
    - sh
    - -c
    - |
      i=0
      cat /var/run/argo-dataflow/in | while read word; do
        if [ $word = EOF ]; then
            echo $i
        fi
        i=$((i+1))
      done | tee -a /var/run/argo-dataflow/out
    image: debian:10.7-slim
    imagePullPolicy: IfNotPresent
    in:
      fifo: true
    name: count-words
    out:
      fifo: true
    resources: {}
    sinks:
    - kafka:
        topic: output-topic
        url: kafka-0.broker.kafka.svc.cluster.local:9092
    sources:
    - nats:
        subject: b-c
